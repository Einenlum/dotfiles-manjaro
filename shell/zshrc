# Enable case-insensitive completion
# General matcher
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z} m:{a-z}={A-Z} r:|[._-]=* r:|=*'

# Specifically apply matcher for commands
zstyle ':completion:*:*:commands' matcher-list 'm:{a-z}={A-Z}'

autoload -Uz compinit
compinit

# Do not keep in history if leading space
setopt HIST_IGNORE_SPACE

HISTFILE=~/.zsh_history # location of the history file

export HISTFILESIZE=10000000 # history limit of the file on disk

export HISTSIZE=10000000 # current session's history limit, also following this https://unix.stackexchange.com/a/595475 $HISTSIZE should be at least 20% bigger than $SAVEHIST 

export SAVEHIST=500000 # zsh saves this many lines from the in-memory history list to the history file upon shell exit

setopt INC_APPEND_HISTORY # history file is updated immediately after a command is entered

setopt SHARE_HISTORY # allows multiple Zsh sessions to share the same command history 

setopt EXTENDED_HISTORY # records the time when each command was executed along with the command itself

setopt APPENDHISTORY # ensures that each command entered in the current session is appended to the history file immediately after execution

setopt interactivecomments

export HISTTIMEFORMAT="%d/%m/%Y %H:%M] "

export LESS="-R"

# Enable incremental history search
bindkey '^[[A' history-beginning-search-backward
bindkey '^[[B' history-beginning-search-forward

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# mise
eval "$(~/.local/bin/mise activate zsh)"

eval "$(starship init zsh)"
export STARSHIP_CONFIG="$HOME/.config/starship/starship.toml"

# User configuration
#
# fly
export FLYCTL_INSTALL="/home/einenlum/.fly"

# export PATH="$HOME/.phpenv/bin"
export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:$PATH"

export PATH=~/.npm-global/bin:$PATH
export PATH=~/.config/composer/vendor/bin:$PATH
export PATH=~/.bin:$PATH
export PATH=~/.local/bin:$PATH
export PATH=~/.poetry/bin:$PATH
export PATH=~/.cargo/bin:$PATH
# export PATH=~/.local/share/nvim/plugged/phpactor/bin:$PATH
# export PATH=/usr/local/go/bin:$PATH
export PATH="$FLYCTL_INSTALL/bin:$PATH"

# export GOPATH=$HOME/Prog/go

# eval "$(phpenv init -)"

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

export EDITOR='nvim'

# Avoid python cache
# export PYTHONDONTWRITEBYTECODE='true'

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

alias tmux="tmux -u2"
alias sf="symfony"
alias sfc="symfony console"
alias sfcc="php app/console cache:clear"
alias sfr="php app/console server:run"
alias git='LANG=en_US git'
alias g="git"
alias gpf="git push --force-with-lease"
alias gp="git push"
alias gpm="git push --mirror"
alias gpr="git pull --rebase"
alias ga="git add --all"
alias gc="git commit -m"
alias gw="git add -A && git commit -m \"[ci skip] WIP\""
alias gcam="git commit --amend --no-edit"
alias dcc="docker-compose"
alias dcu="docker-compose up -d"
alias dcr="docker-compose run --rm"
alias dcd="docker-compose down"
alias dco="docker-compose stop"
alias dca="docker-compose start"
alias dcb="docker-compose build"
alias dce="docker-compose exec"
alias dcl="docker-compose logs"
alias dog='highlight -O ansi'
alias bat='bat --paging=never --style=plain,numbers'
# preview image in terminal
alias icat="kitten icat"
alias kvim='NVIM_APPNAME="kickstart-nvim" nvim'
alias vim='nvim'
alias vi='vim'
alias baum='tree -aL 1'
alias srg="rg -j1"
alias kl="kubectl"
alias pos="poetry shell"
alias po="poetry"
alias c="composer"
alias dja='DJANGO_SETTINGS_MODULE=project.settings.development python src/manage.py'
alias pm='python ./manage.py'
alias py="python"
alias sail='sh $([ -f sail ] && echo sail || echo vendor/bin/sail)'
alias art="./artisan"
alias sa="sail artisan"
alias sc="sail composer"
alias s="sail"
alias so="source ./.venv/bin/activate"
alias ve="python -m venv .venv && so"
alias urd="uv run django-admin"
alias urm="uv run manage.py"
alias de="deactivate"
alias fly="LOG_LEVEL=no flyctl"
alias cd="z"
alias ls="exa"
alias ll="exa"

# -i asks for confirmation if it overrides a file
# -v recaps what you've done
alias mv="mv -iv"

# -i asks for confirmation if it overrides a file
# -v recaps what you've done
# -r is for recursive
alias cp="cp -riv"

# -v recaps what you've done
# -p creates parent folders if not present
alias mkdir="mkdir -vp"

# adonisjs
alias na="node ace"

# allow ctrl-s
stty -ixon

# disallow beep
xset b off

export PATH="$HOME/.npm-global/bin:$PATH"
export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
export PATH="$PATH:$HOME/go/bin"
export PATH="$PATH:$HOME/.phpstorm/bin"
# export PATH="$PATH:$HOME/anaconda3/bin"

# Use fd instead of default fzf (for speed and gitignore)
# --files: List files that would be searched but do not search
# --hidden: Search hidden files and folders
# --follow: Follow symlinks
# --glob: Additional conditions for search (in this case ignore everything in the .git/ folder)

export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*"'

phan() { docker run -v $PWD:/mnt/src --rm -u "$(id -u):$(id -g)" cloudflare/phan:latest $@; return $?; }

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
#__conda_setup="$('/home/einenlum/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
#if [ $? -eq 0 ]; then
#    eval "$__conda_setup"
#else
#    if [ -f "/home/einenlum/anaconda3/etc/profile.d/conda.sh" ]; then
#        . "/home/einenlum/anaconda3/etc/profile.d/conda.sh"
#    else
#        export PATH="/home/einenlum/anaconda3/bin:$PATH"
#    fi
#fi
#unset __conda_setup
# <<< conda initialize <<<

searchgit() {
  STRING_TO_SEARCH=$1
  shift;
  git log -S"$STRING_TO_SEARCH" --color=always \
      --format="%C(auto)%h%d %s %C(black)%C(bold)%cr" "$@" |
  fzf --ansi --reverse --tiebreak=index \
      --bind "ctrl-m:execute:
                (grep -o '[a-f0-9]\{7\}' | head -1 |
                xargs -I % sh -c 'git show --color=always % | less -R') << 'FZF-EOF'
                {}
                FZF-EOF
              "
}

source /home/einenlum/.config/broot/launcher/bash/br

# Add fzf bindings
source /usr/share/fzf/key-bindings.zsh
source /usr/share/fzf/completion.zsh

eval "$(zoxide init zsh)"

# bun completions
[ -s "/home/einenlum/.bun/_bun" ] && source "/home/einenlum/.bun/_bun"

# bindings
# # Bind keys for moving backward and forward by word
bindkey "^[[1;5C" forward-word  # Ctrl + Right Arrow
bindkey "^[[1;5D" backward-word  # Ctrl + Left Arrow
bindkey "^[[3~" delete-char


# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"
export PATH="/home/einenlum/.config/herd-lite/bin:$PATH"
export PHP_INI_SCAN_DIR="/home/einenlum/.config/herd-lite/bin:$PHP_INI_SCAN_DIR"

curl_time() {
    curl -so /dev/null -w "\
   namelookup:  %{time_namelookup}s\n\
      connect:  %{time_connect}s\n\
   appconnect:  %{time_appconnect}s\n\
  pretransfer:  %{time_pretransfer}s\n\
     redirect:  %{time_redirect}s\n\
starttransfer:  %{time_starttransfer}s\n\
-------------------------\n\
        total:  %{time_total}s\n" "$@"
}
